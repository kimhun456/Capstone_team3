/*
 * Copyright (c) 2016 Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.1 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://floralicense.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#define STOPWATCH_BG_COLOR 07 07 07 255

#define DEBUG_SPACECHECKER_FOR_LAYOUT(TARGET) \
   part {\
      name: TARGET".space_checker";\
      type: RECT;\
      mouse_events: 1;\
      repeat_events: 1;\
      description {\
         state: "default" 0;\
         fixed: 1 1;\
         rel1 { to: TARGET; }\
         rel2 { to: TARGET; }\
         color : 255 255 255 30;\
      }\
   }

#define PROGRAM_STATE_SET(NAME, SOURCE, SIGNAL, STATE, TARGET) \
   program {\
      name: NAME;\
      source: SOURCE;\
      signal: SIGNAL;\
      action: STATE_SET STATE 0;\
      target: TARGET;\
   }

#define PROGRAM_SIGNAL_EMIT(NAME, SOURCE, SIGNAL, TARGET) \
   program {\
      name: NAME;\
      source: SOURCE;\
      signal: SIGNAL;\
      action: SIGNAL_EMIT TARGET "edj";\
   }

images
{
    image: "press.png" COMP;
}

collections {
   group {
      name: "main";
      parts {
         part {
            name: "bg";
            type: RECT;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 1.0; }
               color : STOPWATCH_BG_COLOR;
            }
         }
         part {
            name: "sw.number.bg";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 1.0; }
            }
         }
         part {
            name: "sw.progressbar";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 1.0; }
            }
         }
         part {
            name: "text.main.start";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 172 34;
               rel1 { relative: 0.5 113/360 ; to: "bg"; }
               rel2 { relative: 0.5 113/360 ; to: "bg"; }
               text {
                  text: "START";
                  font: "Tizen:style=light"; size: 26; align: 0.5 0.5;
               }
                  color : 0 204 77 255;
            }
            description {
               state: "start,pressed" 0;
               inherit: "default" 0.0;
                  color : 0 204 77 255*40/100;
            }
            description {
               state: "start,removed" 0;
               inherit: "default" 0.0;
                  color : 0 204 77 0;
            }
            description {
               state: "resume" 0;
               inherit: "default" 0.0;
               text {
                  text: "RESUME";
               }
                  color : 0 204 77 255;
            }
            description {
               state: "resume,pressed" 0;
               inherit: "resume" 0.0;
                  color : 0 204 77 255*40/100;
            }
            description {
               state: "stop" 0;
               inherit: "default" 0.0;
               text {
                  text: "STOP";
               }
                  color : 216 62 62 255;
            }
            description {
               state: "stop,pressed" 0;
               inherit: "stop" 0.0;
                  color : 216 62 62 255*40/100;
            }
         }

         part {
            name: "area.main.time";
            type: SPACER;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 172 58;
               rel1 { relative: 0.5 147/360 ; to: "bg"; }
               rel2 { relative: 0.5 147/360 ; to: "bg"; }
            }
         }

         part {
            name: "text.main.minutes";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 50 58;
               rel1 { relative: 0.5 0.0 ; offset: -61 0; to: "area.main.time"; }
               rel2 { relative: 0.5 0.0 ; offset: -61 0; to: "area.main.time"; }
               text {
                  text: "00";
                  font: "Tizen:style=light"; size: 44; align: 0.5 0.5;
               }
                  color : 249 249 249 255;
            }
         }

         part {
            name: "text.main.seconds";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 50 58;
               rel1 { relative: 0.5 0.0 ; to: "area.main.time"; }
               rel2 { relative: 0.5 0.0 ; to: "area.main.time"; }
               text {
                  text: "00";
                  font: "Tizen:style=light"; size: 44; align: 0.5 0.5;
               }
                  color : 249 249 249 255;
            }
         }

         part {
            name: "text.main.milliseconds";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 50 58;
               rel1 { relative: 0.5 0.0 ; offset: 61 0; to: "area.main.time"; }
               rel2 { relative: 0.5 0.0 ; offset: 61 0; to: "area.main.time"; }
               text {
                  text: "00";
                  font: "Tizen:style=light"; size: 44; align: 0.5 0.5;
               }
                  color : 249 249 249 255;
            }
         }

         part {
            name: "text.main.colon";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: 7 58;
               rel1 { relative: 0.5 0.0 ; offset: -34 0; to: "area.main.time"; }
               rel2 { relative: 0.5 0.0 ; offset: -34 0; to: "area.main.time"; }
               text {
                  text: ":";
                  font: "Tizen:style=light"; size: 24; align: 0.5 0.45;
               }
                  color : 249 249 249 255;
            }
         }

         part {
            name: "text.main.dot";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.0 0.0;
               min: 7 58;
               rel1 { relative: 0.5 0.0 ; offset: 27 0; to: "area.main.time"; }
               rel2 { relative: 0.5 0.0 ; offset: 27 0; to: "area.main.time"; }
               text {
                  text: ".";
                  font: "Tizen:style=light"; size: 24; align: 0.5 0.7;
               }
                  color : 249 249 249 255;
            }
         }

         part {
            name: "text.main.lap";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 172 34;
               rel1 { relative: 0.5 217/360 ; to: "bg"; }
               rel2 { relative: 0.5 217/360 ; to: "bg"; }
               text {
                  text: "LAP";
                  font: "Tizen:style=light"; size: 26; align: 0.5 0.5;
               }
                  color : 0 148 255 0;
            }
            description {
               state: "lap" 0;
               inherit: "default" 0.0;
                  color : 0 148 255 255;
            }
            description {
               state: "lap,pressed" 0;
               inherit: "default" 0.0;
                  color : 0 148 255 255*40/100;
            }
            description {
               state: "reset" 0;
               inherit: "default" 0.0;
               text {
                  text: "RESET";
               }
                  color : 0 148 255 255;
            }
            description {
               state: "reset,pressed" 0;
               inherit: "reset" 0.0;
                  color : 0 148 255 255*40/100;
            }
         }

         part {
            name: "sw.main.lap.number.bg";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 32 20;
               rel1 { relative: 0.5 253/360 ; to: "bg"; }
               rel2 { relative: 0.5 253/360 ; to: "bg"; }
            }
         }

         part {
            name: "text.main.lap.number";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 32 20;
               rel1 { relative: 0.5 253/360 ; to: "bg"; }
               rel2 { relative: 0.5 253/360 ; to: "bg"; }
               text {
                  text: "";
                  font: "Tizen:style=medium"; size: 18; align: 0.5 0.5;
               }
                  color : 249 249 249 255;
            }
         }

         part {
            name: "img.main.press.ef";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.5;
               min: 180 180;
               rel1 { relative: 0.5 130/360 ; to: "bg"; }
               rel2 { relative: 0.5 130/360 ; to: "bg"; }
               image.normal : "press.png";
               color : 249 249 249 0;
            }
            description {
               state: "default" 0.5;
               inherit: "default" 0.0;
               color : 249 249 249 15*255/100;
            }
            description {
               state: "default" 0.9;
               inherit: "default" 0.5;
               min: 216 216;
               color : 249 249 249 0;
            }
         }

         part {
            name: "rect.touch.start";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 180 96;
               rel1 { relative: 0.5 60/360 ; to: "bg"; }
               rel2 { relative: 0.5 60/360 ; to: "bg"; }
               color : 0 0 0 0;
            }
         }

         part {
            name: "rect.touch.reset";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0;
               fixed: 1 1;
               align: 0.5 0.0;
               min: 180 96;
               rel1 { relative: 0.5 204/360 ; to: "bg"; }
               rel2 { relative: 0.5 204/360 ; to: "bg"; }
               color : 0 0 0 0;
            }
         }
      } //parts
      programs {
         PROGRAM_SIGNAL_EMIT("touch.down.start", "rect.touch.start", "mouse,down,*", "start_down");
         PROGRAM_SIGNAL_EMIT("touch.up.start", "rect.touch.start", "mouse,up,*", "start_up");
         PROGRAM_SIGNAL_EMIT("touch.down.reset", "rect.touch.reset", "mouse,down,*", "reset_down");
         PROGRAM_SIGNAL_EMIT("touch.up.reset", "rect.touch.reset", "mouse,up,*", "reset_up");

         PROGRAM_SIGNAL_EMIT("click.start", "rect.touch.start", "mouse,clicked,*", "start,click");
         PROGRAM_SIGNAL_EMIT("click.reset", "rect.touch.reset", "mouse,clicked,*", "reset,click");

         program {
            name: "press_animation_0";
            source: "rect.touch.start";
            signal: "start.touch";
            action: STATE_SET "default" 0.5;
            target: "img.main.press.ef";
            after: "press_animation_1";
         }
         program {
            name: "press_animation_1";
            action: STATE_SET "default" 0.9;
            target: "img.main.press.ef";
            transition: LINEAR 0.2;
            after: "press_animation_2";
         }
         program {
            name: "press_animation_2";
            action: STATE_SET "default" 0.0;
            target: "img.main.press.ef";
         }
         PROGRAM_STATE_SET("start_removed", "rect.touch.start", "start_removed", "start,removed", "text.main.start");
         PROGRAM_STATE_SET("start_pressed", "rect.touch.start", "start_pressed", "start,pressed", "text.main.start");
         PROGRAM_STATE_SET("start_released", "rect.touch.start", "start_released", "default", "text.main.start");
         PROGRAM_STATE_SET("stop_pressed", "rect.touch.start", "stop_pressed", "stop,pressed", "text.main.start");
         PROGRAM_STATE_SET("stop_released", "rect.touch.start", "stop_released", "stop", "text.main.start");
         PROGRAM_STATE_SET("resume_pressed", "rect.touch.start", "resume_pressed", "resume,pressed", "text.main.start");
         PROGRAM_STATE_SET("resume_released", "rect.touch.start", "resume_released", "resume", "text.main.start");
         PROGRAM_STATE_SET("lap_removed", "rect.touch.reset", "lap_removed", "default", "text.main.lap");
         PROGRAM_STATE_SET("lap_pressed", "rect.touch.reset", "lap_pressed", "lap,pressed", "text.main.lap");
         PROGRAM_STATE_SET("lap_released", "rect.touch.reset", "lap_released", "lap", "text.main.lap");
         PROGRAM_STATE_SET("reset_pressed", "rect.touch.reset", "reset_pressed", "reset,pressed", "text.main.lap");
         PROGRAM_STATE_SET("reset_released", "rect.touch.reset", "reset_released", "reset", "text.main.lap");
      }
   }
}